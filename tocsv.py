import csv
from sentence_transformers import SentenceTransformer, util
from mergeskills import merged_groups

model_name = 'paraphrase-MiniLM-L6-v2'
model = SentenceTransformer(model_name)


# skills_dict = {'dlp': ['stp', 'catalyst', 'solar', 'wi fi', 'layer 3', 'rstp', 'layer 2', 'csa', 'switches', 'ips', 'dlp', 'routing protocols', 'lte', 'directory services', 'cisco switches', 'pix', 'cabling', 'network monitoring', 'frame relay', 'network support', 'ppp', 'fortigate', 'vulnerabilities', 'cisco certified', 'isdn', 'ccnp', 'usb', 'qos', 'isr', 'ip', 'infrastructure design', 'ucs', 'soc', 'gtm', 'ise', 'wifi', 'gre', 't1', 'checkpoint firewall', 'ip addressing', 'dmvpn', 'ieee 80211', 'printer support', 'bluecoat', 'vmax', 'wdm', 'vpls', '8021q', 'cisco router', 'cisco mds', 'wap', 'scsi', 'emi', 'firewall administration', 'bridging', 'dmz', 'wan optimization', 'avaya', 'icdl', 'wlc', 'port security', 'network infrastructure', 'endpoint protection', 'asa firewall', 'diameter', 'fwsm', 'cisco pix', 'cisco ips', 'cifs', 'network printer', 'qxdm', 'malware analysis', 'mpeg', 'emc storage', 'router', 'cacti', 'sata', 'help management', 'sdh', 'cucm', 'pri', 'server monitoring', 'networking devices', 'lwapp', 'ieee 8021x', 'orcad', 'cisco fwsm', 'vrf', 'sophos', 'switch configuration', 'network architecture', 'metro ethernet', 'hardware maintenance', 'security operations center', 'dfm', 'unified communications', 'ss7', 'implementation management', 'umts', 'vlsm', 'ip networking', 'enterprise networks', 'network design & implementation', 'network implementation', 'phy', 'dslam', 'winds', 'ntfs', 'l2tp', 'network monitoring tools', 'utm', 'process review', 'timing analysis', 'video conferences', 'pda', 'wireless network', 'cables', 'network automation', 'networking infrastructure', 'hp server', 'fas', 'terminals', 'burning desire', 'vsat', 'checkpoint firewalls', 'obm', 'client network', 'network operation', 'desktop engineering', 'bdi'], 'epo': ['firewalls', 'symantec', 'vlan', 'load balancing', 'monitoring tools', 'snmp', 'desktop support', 'ipsec', 'bgp', 'mpls', 'stp', 'ospf', 'nat', 'cisco routers', 'catalyst', 'solar', 'eigrp', 'ethernet', 'microsoft exchange', 'cisco asa', 'patch management', 'juniper', 'udp', 'hsrp', 'network design', 'wi fi', 'system monitoring', 'vtp', 'rip', 'voip', 'netapp', 'ipv4', 'osi', 'layer 3', 'nis', 'rstp', 'acs', 'layer 2', 'esxi', 'fabric', 'ids', 'sftp', 'csa', 'bluetooth', 'ipv6', 'switches', 'ips', 'remote access', 'vmware vsphere', 'multicast', 'vnx', 'cyber security', 'microsoft active directory', 'vrrp', 'appliance', 'altiris', 'routing protocols', 'lte', 'satellite', 'directory services', 'spanning tree', 'system monitoring tools', 'glbp', 'share point 2010', 'sip', 'network management', 'cisco switches', 'pix', 'network monitoring', 'siem', 'mcafee', 'frame relay', 'windows server 2008 r2', 'ssh', 'esx', 'dms', 'tacacs+', 'failover', 'network support', 'ppp', 'fortigate', 'wintel', 'sparc', 'vulnerabilities', 'cisco certified', 'network administration', 'epo', 'product support', 'isdn', 'ccnp', 'symmetrix', 'cisco networking', 'arp', 'usb', 'qos', 'isr', 'cisco nexus', 'ip', 'infrastructure design', 'ucs', 'network protocols', 'cisco ios', 'tcp udp', 'server support', 'ntp', 'gtm', 'ise', 'dhcp server', 'hdlc', 'gre', 'hardware support', 't1', 'checkpoint firewall', 'osi model', 'isis', 'ip addressing', 'vdi', 'dmvpn', 'ptp', 'cdp', 'ieee 80211', 'printer support', 'networking protocols', 'bluecoat', 'vmax', 'tftp', 'wdm', 'vpls', 'kerberos', 'tcpdump', 'emc vnx', '8021q', 'qualys', 'sonet', 'cisco router', 'cisco mds', 'wap', 'mds', 'scsi', 'icmp', 'emi', 'firewall administration', 'emc clariion', 'bridging', 'dmz', 'wan optimization', 'avaya', 'mcsa', 'icdl', 'wlc', 'port security', 'endpoint protection', 'hardening', 'asa firewall', 'solarwinds', 'diameter', 'fwsm', 'cisco pix', 'cisco ips', 'srx', 'pgp', 'wds', 'cifs', 'wsus', 'cisco ucs', 'cisco firewalls', 'networking concepts', 'network printer', 'meraki', 'red hat satellite', 'emc storage', 'router', 'mgcp', 'hop', 'cacti', 'ssd', 'iptables', 'help management', 'sdh', 'rhev', 'avaya aura', 'cucm', 'mcafee epo', 'fireeye', 'vmware vdi', 'endpoint security', 'ssl vpn', 'internet protocol', 'extreme networks', 'rtp', 'pri', 'microsoft hyper v', 'server monitoring', 'networking devices', 'lwapp', 'ieee 8021x', 'afm', 'cisco fwsm', 'spanning tree protocol', 'network operations', 'sccp', 'vrf', 'networking skills', 'mpls vpn', 'drs', 'sophos', 'waf', 'switch configuration', 'metro ethernet', 'hardware maintenance', 'security operations center', 'acc', 'dfm', 'ss7', 'dwdm', 'vlsm', 'ip networking', 'hls', 'vblock', 'enterprise networks', 'network design & implementation', 'phy', 'network protocol', 'dslam', 'microsoft operating systems', 'networking fundamentals', 'winds', 'ip routing', 'wml', 'cisco call manager', 'ntfs', 'ciena', 'l2tp', 'network monitoring tools', 'infoblox', 'qradar', 'utm', 'process review', 'emc networker', 'dvr', 'pppoe', 'tar', 'video conferences', 'vmware thinapp', 'emc celerra', 'websense', 'netflow', 'gfi', 'adtran', 'threat management', 'igmp', 'sourcefire', 'nexpose', 'cables', 'vmware view', 'emc avamar', 'rsync', 'network automation', 'networking infrastructure', 'fttx', 'security threat', 'hp server', 'symantec endpoint protection', 'pvst', 'ldp', 'netscreen', 'fas', 'datacenter operations', 'sonicwall firewalls', 'engineering team', 'burning desire', 'cisco telepresence', 'ipt', 'technical helpdesk', 'psos', 'l2f', 'network layer', 'data link layer', 'hips', 'veeam', 'barracuda', 'ovm', 'l3vpn', 'clients network', 'vsat', 'networking hardware', 'checkpoint firewalls', 'firewall management', 'ccnp routing', 'cisco certifications', 'obm', 'client network', 'network operation', 'wpa', 'desktop virtualization', 'bdi', 'cne', 'hypervisors', 'blade servers', 'fiber channel']}
skills_dict = merged_groups

with open('jobs.csv', mode='w', newline='') as file:
    writer = csv.writer(file)
    # writer.writerow(['Skills'])

    for key, value in skills_dict.items():
        encoded_key = model.encode([key], convert_to_tensor=True)
        encoded_value = model.encode(value, convert_to_tensor=True)

        similarities = util.pytorch_cos_sim(encoded_key, encoded_value)

        row_data = [key] + [item for pair in zip(value, similarities[0].tolist()) for item in pair]
        writer.writerow(row_data)

print("Results saved")

